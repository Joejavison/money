{"repository_name":"github.com/crystal-money/money","body":"# money [![Build Status](https://travis-ci.org/crystal-money/money.svg?branch=master)](https://travis-ci.org/crystal-money/money)\n\n## Introduction\n\nA Crystal shard for dealing with money and currency conversion ported from [RubyMoney](https://github.com/RubyMoney/money).\n\n### Features\n\n- Provides a `Money` class which encapsulates all information about an certain\n  amount of money, such as its value and its currency.\n- Provides a `Money::Currency` class which encapsulates all information about\n  a monetary unit.\n- Represents monetary values as integers, in cents. This avoids floating point\n  rounding errors.\n- Represents currency as `Money::Currency` instances providing a high level of\n  flexibility.\n- Provides APIs for exchanging money from one currency to another.\n\n### Resources\n\n- [API Documentation](https://crystal-money.github.io/money/)\n- [Git Repository](https://github.com/crystal-money/money)\n\n### Notes\n\n- Your app must use UTF-8 to function with this library. There are a\n  number of non-ASCII currency attributes.\n- This app requires JSON.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  money:\n    github: crystal-money/money\n```\n\nInstall with `shards install`.\n\n## Usage\n\n```crystal\nrequire \"money\"\n\n# 10.00 USD\nmoney = Money.new(1000, \"USD\")\nmoney.cents    # => 1000\nmoney.currency # => Money::Currency.find(\"USD\")\n\n# Comparisons\nMoney.new(1000, \"USD\") == Money.new(1000, \"USD\") # => true\nMoney.new(1000, \"USD\") == Money.new(100,  \"USD\") # => false\nMoney.new(1000, \"USD\") == Money.new(1000, \"EUR\") # => false\nMoney.new(1000, \"USD\") != Money.new(1000, \"EUR\") # => true\n\n# Arithmetic\nMoney.new(1000, \"USD\") + Money.new(500, \"USD\") == Money.new(1500, \"USD\")\nMoney.new(1000, \"USD\") - Money.new(200, \"USD\") == Money.new(800,  \"USD\")\nMoney.new(1000, \"USD\") / 5                     == Money.new(200,  \"USD\")\nMoney.new(1000, \"USD\") * 5                     == Money.new(5000, \"USD\")\n\n# Unit to subunit conversions\nMoney.from_amount(5, \"USD\") == Money.new(500,  \"USD\") # 5 USD\nMoney.from_amount(5, \"JPY\") == Money.new(5,    \"JPY\") # 5 JPY\nMoney.from_amount(5, \"TND\") == Money.new(5000, \"TND\") # 5 TND\n\n# Currency conversions\nsome_code_to_setup_exchange_rates\nMoney.new(1000, \"USD\").exchange_to(\"EUR\") == Money.new(some_value, \"EUR\")\n\n# Formatting (see Formatting section for more options)\nMoney.new(100, \"USD\").format # => \"$1.00\"\nMoney.new(100, \"GBP\").format # => \"£1.00\"\nMoney.new(100, \"EUR\").format # => \"€1.00\"\n```\n\n## Currency\n\nCurrencies are consistently represented as instances of `Money::Currency`.\nThe most part of `Money` APIs allows you to supply either a `String`, `Symbol`\nor a `Money::Currency`.\n\n```crystal\nMoney.new(1000, \"USD\") == Money.new(1000, Money::Currency.find(\"USD\"))\nMoney.new(1000, \"EUR\").currency == Money::Currency.find(:eur)\nMoney.new(1000, \"PLN\").currency == Money::Currency[:pln]\n```\n\nA `Money::Currency` instance holds all the information about the currency,\nincluding the currency symbol, name and much more.\n\n```crystal\ncurrency = Money.new(1000, \"USD\").currency\ncurrency.code # => \"USD\"\ncurrency.name # => \"United States Dollar\"\n```\n\nTo define a new `Money::Currency` use `Money::Currency.register` as shown\nbelow.\n\n```crystal\ncurrency = Money::Currency.from_json({\n  priority:            1,\n  code:                \"USD\",\n  iso_numeric:         840,\n  name:                \"United States Dollar\",\n  symbol:              \"$\",\n  symbol_first:        true,\n  subunit:             \"Cent\",\n  subunit_to_unit:     100,\n  decimal_mark:        \".\",\n  thousands_separator: \",\"\n}.to_json)\n\nMoney::Currency.register(currency)\n```\n\nThe pre-defined set of attributes includes:\n\n- `:priority` a numerical value you can use to sort/group the currency list\n- `:code` the international 3-letter code as defined by the ISO 4217 standard\n- `:iso_numeric` the international 3-digit code as defined by the ISO 4217 standard\n- `:name` the currency name\n- `:symbol` the currency symbol (UTF-8 encoded)\n- `:subunit` the name of the fractional monetary unit\n- `:subunit_to_unit` the proportion between the unit and the subunit\n- `:decimal_mark` character between the whole and fraction amounts\n- `:thousands_separator` character between each thousands place\n\nAll attributes except `:code` are optional. Some attributes, such as\n`:symbol`, are used by the Money class to print out a representation of the\nobject. Other attributes, such as `:name` or `:priority`, exist to provide a\nbasic API you can take advantage of to build your application.\n\n### :priority\n\nThe priority attribute is an arbitrary numerical value you can assign to the\n`Money::Currency` and use in sorting/grouping operation.\n\nFor instance, let's assume your web application needs to render a currency\nselector like the one available\n[here](https://finance.yahoo.com/currency-converter/). You can create a couple of\ncustom methods to return the list of major currencies and all currencies as\nfollows:\n\n```crystal\n# Returns an array of currency id where priority < 10\ndef major_currencies(hash)\n  hash.values.sort.take_while(&.priority.<(10)).map(&.id)\nend\n\n# Returns an array of all currency id\ndef all_currencies(hash)\n  hash.keys\nend\n\nmajor_currencies(Money::Currency.table)\n# => [\"usd\", \"eur\", \"gbp\", \"aud\", \"cad\", \"jpy\"]\n\nall_currencies(Money::Currency.table)\n# => [\"aed\", \"afn\", \"all\", ...]\n```\n\n### Default Currency\n\nBy default `Money` defaults to USD as its currency. This can be overwritten\nusing:\n\n```crystal\nMoney.default_currency = Money::Currency.find(\"CAD\")\n# or\nMoney.default_currency = :cad\n```\n\n### Currency Exponent\n\nThe exponent of a money value is the number of digits after the decimal\nseparator (which separates the major unit from the minor unit). See e.g.\n[ISO 4217](https://www.currency-iso.org/en/shared/amendments/iso-4217-amendment.html) for more\ninformation. You can find the exponent (as an `Int32`) by\n\n```crystal\nMoney::Currency.find(\"USD\").exponent # => 2\nMoney::Currency.find(\"JPY\").exponent # => 0\nMoney::Currency.find(\"MGA\").exponent # => 1\n```\n\n### Currency Lookup\n\nTo find a given currency by ISO 4217 numeric code (three digits) you can do\n\n```crystal\nMoney::Currency.find(&.iso_numeric.==(978)) # => Money::Currency.find(:eur)\n```\n\n## Currency Exchange\n\nExchanging money is performed through an exchange `Bank` object. The default\nexchange `Bank` object requires one to manually specify the exchange rate. Here's\nan example of how it works:\n\n```crystal\nMoney.default_bank.store[\"USD\", \"EUR\"] = 1.24515\nMoney.default_bank.store[\"EUR\", \"USD\"] = 0.803115\n\nMoney.new(100, \"USD\").exchange_to(\"EUR\") # => Money.new(124, \"EUR\")\nMoney.new(100, \"EUR\").exchange_to(\"USD\") # => Money.new(80,  \"USD\")\n```\n\nComparison and arithmetic operations work as expected:\n\n```crystal\nMoney.new(1000, \"USD\") <=> Money.new(900, \"USD\") # => 1; 9.00 USD is smaller\nMoney.new(1000, \"EUR\") + Money.new(10, \"EUR\") == Money.new(1010, \"EUR\")\n\nMoney.default_bank.store[\"USD\", \"EUR\"] = 0.5\nMoney.new(1000, \"EUR\") + Money.new(1000, \"USD\") == Money.new(1500, \"EUR\")\n```\n\n### Exchange rate stores\n\nThe default bank is initialized with an in-memory store for exchange rates.\n\n```crystal\nMoney.default_bank = Money::Bank::VariableExchange.new(Money::Currency::RateStore::Memory.new)\n```\n\nYou can pass you own store implementation, ie. for storing and retrieving rates off a database, file, cache, etc.\n\n```crystal\nMoney.default_bank = Money::Bank::VariableExchange.new(MyCustomStore.new)\n\n# Add to the underlying store\nMoney.default_bank.store[\"USD\", \"CAD\"] = 0.9\n\n# Retrieve from the underlying store\nMoney.default_bank.store[\"USD\", \"CAD\"] # => 0.9\n\n# Exchanging amounts just works\nMoney.new(1000, \"USD\").exchange_to(\"CAD\") # => #<Money @fractional=900 @currency=\"CAD\">\n```\n\nThere is nothing stopping you from creating store objects which scrapes\n[XE](http://www.xe.com) for the current rates or just returns `rand(2)`:\n\n```crystal\nMoney.default_bank = Money::Bank::VariableExchange.new(StoreWhichScrapesXeDotCom.new)\n```\n\nYou can also implement your own `Bank` to calculate exchanges differently.\nDifferent banks can share Stores.\n\n```crystal\nMoney.default_bank = MyCustomBank.new(Money::Currency::RateStore::Memory.new)\n```\n\nIf you wish to disable automatic currency conversion to prevent arithmetic when\ncurrencies don't match:\n\n```crystal\nMoney.disallow_currency_conversion!\n```\n\n## Formatting\n\nThere are several formatting rules for when `Money#format` is called. For more information, check out the [formatting module source](https://github.com/crystal-money/money/blob/master/src/money/money/formatting.cr), or read the latest release's [docs](http://crystal-money.github.io/money/Money/Formatting.html).\n\nIf you wish to format money according to the EU's [Rules for expressing monetary units](http://publications.europa.eu/code/en/en-370303.htm#position) in either English, Irish, Latvian or Maltese:\n\n```crystal\nmoney = Money.new(123, :gbp)               # => #<Money @fractional=123 @currency=\"GBP\">\nmoney.format(symbol: \"#{money.currency} \") # => \"GBP 1.23\"\n```\n\n## Heuristics\n\nTo parse a `String` containing amount with currency code or symbol you can do\n\n```crystal\nMoney.parse(\"$12.34\")    == Money.from_amount(12.34, \"USD\")\nMoney.parse(\"12.34 USD\") == Money.from_amount(12.34, \"USD\")\n```\n\n## Contributors\n\n- [Sija](https://github.com/Sija) Sijawusz Pur Rahnama - creator, maintainer\n\n## Thanks\n\nThanks to all of the [contributors](https://github.com/RubyMoney/money/blob/master/AUTHORS) for their awesome work on [RubyMoney](https://github.com/RubyMoney/money).\n","program":{"html_id":"github.com/crystal-money/money/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/crystal-money/money","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crystal-money/money/Money","path":"Money.html","kind":"class","full_name":"Money","name":"Money","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-money/money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-money/money/Money/Exchange","kind":"module","full_name":"Money::Exchange","name":"Exchange"},{"html_id":"github.com/crystal-money/money/Money/Formatting","kind":"module","full_name":"Money::Formatting","name":"Formatting"},{"html_id":"github.com/crystal-money/money/Money/Allocate","kind":"module","full_name":"Money::Allocate","name":"Allocate"},{"html_id":"github.com/crystal-money/money/Money/Arithmetic","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic"},{"html_id":"github.com/crystal-money/money/Money/Casting","kind":"module","full_name":"Money::Casting","name":"Casting"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money.cr"},{"filename":"money/bank.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr"},{"filename":"money/bank/single_currency.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/single_currency.cr"},{"filename":"money/bank/variable_exchange.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/variable_exchange.cr"},{"filename":"money/currency/enumeration.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr"},{"filename":"money/currency/loader.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/loader.cr"},{"filename":"money/currency.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr"},{"filename":"money/error.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/error.cr"},{"filename":"money/money/allocate.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr"},{"filename":"money/money/arithmetic.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr"},{"filename":"money/money/casting.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/casting.cr"},{"filename":"money/money/constructors.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr"},{"filename":"money/money/exchange.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/exchange.cr"},{"filename":"money/money/formatting.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr"},{"filename":"money/money/json.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/json.cr"},{"filename":"money/money/parse.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr"},{"filename":"money/money.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr"},{"filename":"money/version.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/version.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/crystal-money/money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-money/money/Money/Allocate","kind":"module","full_name":"Money::Allocate","name":"Allocate"},{"html_id":"github.com/crystal-money/money/Money/Arithmetic","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic"},{"html_id":"github.com/crystal-money/money/Money/Casting","kind":"module","full_name":"Money::Casting","name":"Casting"},{"html_id":"github.com/crystal-money/money/Money/Exchange","kind":"module","full_name":"Money::Exchange","name":"Exchange"},{"html_id":"github.com/crystal-money/money/Money/Formatting","kind":"module","full_name":"Money::Formatting","name":"Formatting"}],"extended_modules":[{"html_id":"github.com/crystal-money/money/Money/Constructors","kind":"module","full_name":"Money::Constructors","name":"Constructors"},{"html_id":"github.com/crystal-money/money/Money/Parse","kind":"module","full_name":"Money::Parse","name":"Parse"}],"subclasses":[],"including_types":[],"namespace":null,"doc":"\"Money is any object or record that is generally accepted as payment for\ngoods and services and repayment of debts in a given socio-economic context\nor country.\" - [Wikipedia](http://en.wikipedia.org/wiki/Money)\n\nAn instance of `Money` represents an amount of a specific currency.\n\n`Money` is a value object and should be treated as immutable.","summary":"<p>\"Money is any object or record that is generally accepted as payment for goods and services and repayment of debts in a given socio-economic context or country.\" - <a href=\"http://en.wikipedia.org/wiki/Money\" target=\"_blank\">Wikipedia</a></p>","class_methods":[{"id":"default_bank-class-method","html_id":"default_bank-class-method","name":"default_bank","doc":"Each `Money` object is associated to a bank object, which is responsible\nfor currency exchange. This property allows you to specify the default\nbank object. The default value for this property is an instance of\n`Bank::VariableExchange`. It allows one to specify custom exchange rates.","summary":"<p>Each <code><a href=\"Money.html\">Money</a></code> object is associated to a bank object, which is responsible for currency exchange.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L34","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L34","def":{"name":"default_bank","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_bank || (@@default_bank = begin\n  Bank::VariableExchange.new\nend)"}},{"id":"default_bank=(default_bank:Bank)-class-method","html_id":"default_bank=(default_bank:Bank)-class-method","name":"default_bank=","doc":null,"summary":null,"abstract":false,"args":[{"name":"default_bank","doc":null,"default_value":"","external_name":"default_bank","restriction":"Bank"}],"args_string":"(default_bank : Bank)","source_link":null,"source_link":null,"def":{"name":"default_bank=","args":[{"name":"default_bank","doc":null,"default_value":"","external_name":"default_bank","restriction":"Bank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_bank = default_bank"}},{"id":"default_currency-class-method","html_id":"default_currency-class-method","name":"default_currency","doc":"Sets the default currency for creating new `Money` object.","summary":"<p>Sets the default currency for creating new <code><a href=\"Money.html\">Money</a></code> object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L23","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L23","def":{"name":"default_currency","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_currency || (@@default_currency = begin\n  Currency.find(\"USD\")\nend)"}},{"id":"default_currency=(default_currency:Currency)-class-method","html_id":"default_currency=(default_currency:Currency)-class-method","name":"default_currency=","doc":null,"summary":null,"abstract":false,"args":[{"name":"default_currency","doc":null,"default_value":"","external_name":"default_currency","restriction":"Currency"}],"args_string":"(default_currency : Currency)","source_link":null,"source_link":null,"def":{"name":"default_currency=","args":[{"name":"default_currency","doc":null,"default_value":"","external_name":"default_currency","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_currency = default_currency"}},{"id":"default_currency=(currency_code:String|Symbol)-class-method","html_id":"default_currency=(currency_code:String|Symbol)-class-method","name":"default_currency=","doc":"Sets the default currency for creating new `Money` object.","summary":"<p>Sets the default currency for creating new <code><a href=\"Money.html\">Money</a></code> object.</p>","abstract":false,"args":[{"name":"currency_code","doc":null,"default_value":"","external_name":"currency_code","restriction":"String | Symbol"}],"args_string":"(currency_code : String | Symbol)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L26","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L26","def":{"name":"default_currency=","args":[{"name":"currency_code","doc":null,"default_value":"","external_name":"currency_code","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.default_currency = Currency.find(currency_code)"}},{"id":"disallow_currency_conversion!-class-method","html_id":"disallow_currency_conversion!-class-method","name":"disallow_currency_conversion!","doc":"Sets the default bank to be a `Bank::SingleCurrency` bank that raises on\ncurrency exchange. Useful when apps operate in a single currency at a time.","summary":"<p>Sets the default bank to be a <code><a href=\"Money/Bank/SingleCurrency.html\">Bank::SingleCurrency</a></code> bank that raises on currency exchange.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L38","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L38","def":{"name":"disallow_currency_conversion!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.default_bank = Bank::SingleCurrency.new"}}],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/json.cr#L9","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/json.cr#L9","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case pull.kind\nwhen :string\n  parse(pull.read_string)\nelse\n  previous_def(pull)\nend"}},{"id":"new(fractional:Float|BigDecimal|BigRational,currency=Money.default_currency)-class-method","html_id":"new(fractional:Float|BigDecimal|BigRational,currency=Money.default_currency)-class-method","name":"new","doc":"Creates a new `Money` object of value given in the\n*fractional* unit of the given *currency*.\n\n```\nMoney.new(1.0)               # => #<Money @fractional=100 @currency=\"USD\">\nMoney.new(1.to_big_d, \"USD\") # => #<Money @fractional=100 @currency=\"USD\">\nMoney.new(1.to_big_r, \"EUR\") # => #<Money @fractional=100 @currency=\"EUR\">\n```","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of value given in the <em>fractional</em> unit of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"fractional","doc":null,"default_value":"","external_name":"fractional","restriction":"Float | BigDecimal | BigRational"},{"name":"currency","doc":null,"default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(fractional : Float | BigDecimal | BigRational, currency = <span class=\"t\">Money</span>.default_currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L79","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L79","def":{"name":"new","args":[{"name":"fractional","doc":null,"default_value":"","external_name":"fractional","restriction":"Float | BigDecimal | BigRational"},{"name":"currency","doc":null,"default_value":"Money.default_currency","external_name":"currency","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(fractional, currency)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(fractional,currency=Money.default_currency)-class-method","html_id":"new(fractional,currency=Money.default_currency)-class-method","name":"new","doc":"Creates a new `Money` object of value given in the\n*fractional* unit of the given *currency*.\n\n```\nMoney.new(100)        # => #<Money @fractional=100 @currency=\"USD\">\nMoney.new(100, \"USD\") # => #<Money @fractional=100 @currency=\"USD\">\nMoney.new(100, \"EUR\") # => #<Money @fractional=100 @currency=\"EUR\">\n```","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of value given in the <em>fractional</em> unit of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"fractional","doc":null,"default_value":"","external_name":"fractional","restriction":""},{"name":"currency","doc":null,"default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(fractional, currency = <span class=\"t\">Money</span>.default_currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L66","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L66","def":{"name":"new","args":[{"name":"fractional","doc":null,"default_value":"","external_name":"fractional","restriction":""},{"name":"currency","doc":null,"default_value":"Money.default_currency","external_name":"currency","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(fractional, currency)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"(other:Money):Int32-instance-method","html_id":"(other:Money):Int32-instance-method","name":"<=>","doc":"Compares two `Money` objects.","summary":"<p>Compares two <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Int32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L88","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L88","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if zero? && other.zero?\n  return 0\nend\nwith_same_currency(other) do |other|\n  fractional <=> other.fractional\nend\n"}},{"id":"amount:BigDecimal-instance-method","html_id":"amount:BigDecimal-instance-method","name":"amount","doc":"Returns the numerical value of the money.\n\n```\nMoney.new(1_00, \"USD\").amount # => BigDecimal.new(\"1.00\")\n```\n\nSee `#to_big_d` and `#fractional`.","summary":"<p>Returns the numerical value of the money.</p>","abstract":false,"args":[],"args_string":" : BigDecimal","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L107","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L107","def":{"name":"amount","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal","visibility":"Public","body":"to_big_d"}},{"id":"bank:Bank-instance-method","html_id":"bank:Bank-instance-method","name":"bank","doc":"The `Bank` object which currency exchanges are performed with.","summary":"<p>The <code><a href=\"Money/Bank.html\">Bank</a></code> object which currency exchanges are performed with.</p>","abstract":false,"args":[],"args_string":" : Bank","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L96","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L96","def":{"name":"bank","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bank","visibility":"Public","body":"Money.default_bank"}},{"id":"cents:Int64-instance-method","html_id":"cents:Int64-instance-method","name":"cents","doc":"Alias of `#fractional`.","summary":"<p>Alias of <code><a href=\"Money.html#fractional%3AInt64-instance-method\">#fractional</a></code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L117","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L117","def":{"name":"cents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"fractional"}},{"id":"currency:Currency-instance-method","html_id":"currency:Currency-instance-method","name":"currency","doc":"The money's currency.","summary":"<p>The money's currency.</p>","abstract":false,"args":[],"args_string":" : Currency","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L56","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L56","def":{"name":"currency","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency","visibility":"Public","body":"@currency"}},{"id":"dollars:BigDecimal-instance-method","html_id":"dollars:BigDecimal-instance-method","name":"dollars","doc":"Alias of `#amount`.","summary":"<p>Alias of <code><a href=\"Money.html#amount%3ABigDecimal-instance-method\">#amount</a></code>.</p>","abstract":false,"args":[],"args_string":" : BigDecimal","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L112","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L112","def":{"name":"dollars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal","visibility":"Public","body":"amount"}},{"id":"fractional:Int64-instance-method","html_id":"fractional:Int64-instance-method","name":"fractional","doc":"The value of the monetary amount represented in the fractional or subunit\nof the currency.\n\nFor example, in the US dollar currency the fractional unit is cents, and\nthere are 100 cents in one US dollar. So given the `Money` representation of\none US dollar, the fractional interpretation is 100.\n\nAnother example is that of the Kuwaiti dinar. In this case the fractional\nunit is the fils and there 1000 fils to one Kuwaiti dinar. So given the\n`Money` representation of one Kuwaiti dinar, the fractional interpretation\nis 1000.","summary":"<p>The value of the monetary amount represented in the fractional or subunit of the currency.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L53","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L53","def":{"name":"fractional","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@fractional"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"Returns hash value based on the `fractional` and `currency` attributes.","summary":"<p>Returns hash value based on the <code><a href=\"Money.html#fractional%3AInt64-instance-method\">#fractional</a></code> and <code><a href=\"Money.html#currency%3ACurrency-instance-method\">#currency</a></code> attributes.</p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L85","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L85","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @fractional.hash(hasher)\nhasher = @currency.hash(hasher)\nhasher\n"}},{"id":"nearest_cash_value:Int64-instance-method","html_id":"nearest_cash_value:Int64-instance-method","name":"nearest_cash_value","doc":"Returns the nearest possible amount in cash value.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.","summary":"<p>Returns the nearest possible amount in cash value.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L126","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L126","def":{"name":"nearest_cash_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"smallest_denomination = currency.smallest_denomination\nif smallest_denomination\nelse\n  raise(UndefinedSmallestDenominationError.new(\"Smallest denomination of this currency is not defined\"))\nend\nrounded_value = (fractional.to_big_d / smallest_denomination).round * smallest_denomination\nrounded_value.to_i64\n"}},{"id":"rounded_to_nearest_cash_value:Money-instance-method","html_id":"rounded_to_nearest_cash_value:Money-instance-method","name":"rounded_to_nearest_cash_value","doc":"See `#nearest_cash_value`.","summary":"<p>See <code><a href=\"Money.html#nearest_cash_value%3AInt64-instance-method\">#nearest_cash_value</a></code>.</p>","abstract":false,"args":[],"args_string":" : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L136","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money.cr#L136","def":{"name":"rounded_to_nearest_cash_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"Money.new(nearest_cash_value, currency)"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/json.cr#L4","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/json.cr#L4","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _fractional = @fractional\n  if _fractional.nil?\n  else\n    json.field(\"fractional\") do\n      _fractional.to_json(json)\n    end\n  end\n  _currency = @currency\n  if _currency.nil?\n  else\n    json.field(\"currency\") do\n      _currency.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[{"html_id":"github.com/crystal-money/money/Money/Allocate","path":"Money/Allocate.html","kind":"module","full_name":"Money::Allocate","name":"Allocate","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/allocate.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"}],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"allocate(splits:Enumerable(Number)):Array(Money)-instance-method","html_id":"allocate(splits:Enumerable(Number)):Array(Money)-instance-method","name":"allocate","doc":"Allocates money between different parties without losing pennies.\nAfter the mathematical split has been performed, leftover pennies will\nbe distributed round-robin amongst the parties. This means that parties\nlisted first will likely receive more pennies than ones that are listed later.\n\n```\n# Give 50% of the cash to party 1, 25% to party 2, and 25% to party 3.\nMoney.new(10_00, \"USD\").allocate([0.5, 0.25, 0.25]) # => [Money.new(5_00), Money.new(2_50), Money.new(2_50)]\nMoney.new(5, \"USD\").allocate({0.3, 0.7})            # => [Money.new(2), Money.new(3)]\nMoney.new(100, \"USD\").allocate(0.33, 0.33, 0.33)    # => [Money.new(34), Money.new(33), Money.new(33)]\n```","summary":"<p>Allocates money between different parties without losing pennies.</p>","abstract":false,"args":[{"name":"splits","doc":null,"default_value":"","external_name":"splits","restriction":"Enumerable(Number)"}],"args_string":"(splits : Enumerable(Number)) : Array(Money)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr#L32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr#L32","def":{"name":"allocate","args":[{"name":"splits","doc":null,"default_value":"","external_name":"splits","restriction":"Enumerable(Number)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Money)","visibility":"Public","body":"allocations = allocations_from_splits(splits)\nif allocations > 1.0\n  raise(ArgumentError.new(\"Splits add to more then 100%\"))\nend\namounts, left_over = amounts_from_splits(allocations, splits)\ndelta = left_over > 0 ? 1 : -1\nsize = amounts.size\nleft_over.to_i64.abs.times do |i|\n  __temp_63 = i % size\n  amounts[__temp_63] = amounts[__temp_63] + delta\nend\namounts.map do |fractional|\n  Money.new(fractional, currency)\nend\n"}},{"id":"allocate(*splits:Number):Array(Money)-instance-method","html_id":"allocate(*splits:Number):Array(Money)-instance-method","name":"allocate","doc":"Allocates money between different parties without losing pennies.\nAfter the mathematical split has been performed, leftover pennies will\nbe distributed round-robin amongst the parties. This means that parties\nlisted first will likely receive more pennies than ones that are listed later.\n\n```\n# Give 50% of the cash to party 1, 25% to party 2, and 25% to party 3.\nMoney.new(10_00, \"USD\").allocate([0.5, 0.25, 0.25]) # => [Money.new(5_00), Money.new(2_50), Money.new(2_50)]\nMoney.new(5, \"USD\").allocate({0.3, 0.7})            # => [Money.new(2), Money.new(3)]\nMoney.new(100, \"USD\").allocate(0.33, 0.33, 0.33)    # => [Money.new(34), Money.new(33), Money.new(33)]\n```","summary":"<p>Allocates money between different parties without losing pennies.</p>","abstract":false,"args":[{"name":"splits","doc":null,"default_value":"","external_name":"splits","restriction":"Number"}],"args_string":"(*splits : Number) : Array(Money)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr#L48","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr#L48","def":{"name":"allocate","args":[{"name":"splits","doc":null,"default_value":"","external_name":"splits","restriction":"Number"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Array(Money)","visibility":"Public","body":"allocate(splits)"}},{"id":"split(num:Int):Array(Money)-instance-method","html_id":"split(num:Int):Array(Money)-instance-method","name":"split","doc":"Splits money amongst parties evenly without losing pennies.\n\n```\nMoney.new(100, \"USD\").split(3) # => [Money.new(34), Money.new(33), Money.new(33)]\n```","summary":"<p>Splits money amongst parties evenly without losing pennies.</p>","abstract":false,"args":[{"name":"num","doc":null,"default_value":"","external_name":"num","restriction":"Int"}],"args_string":"(num : Int) : Array(Money)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr#L8","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/allocate.cr#L8","def":{"name":"split","args":[{"name":"num","doc":null,"default_value":"","external_name":"num","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Money)","visibility":"Public","body":"if num < 1\n  raise(ArgumentError.new(\"Need at least one party\"))\nend\nlow = Money.new(fractional / num, currency)\nhigh = Money.new(low.fractional + 1, currency)\nremainder = fractional % num\nArray(Money).new(num) do |index|\n  index < remainder ? high : low\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Arithmetic","path":"Money/Arithmetic.html","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/arithmetic.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"}],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other):Money-instance-method","html_id":"%(other):Money-instance-method","name":"%","doc":"Alias of `#modulo`.","summary":"<p>Alias of <code><a href=\"../Money/Arithmetic.html#modulo%28other%29%3AMoney-instance-method\">#modulo</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L154","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L154","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"modulo(other)"}},{"id":"*(other:Number):Money-instance-method","html_id":"*(other:Number):Money-instance-method","name":"*","doc":"Multiplies the monetary value with the given *other* `Number` and returns\na new `Money` object with this monetary value and the same `#currency`.\n\n```\nMoney.new(100) * 2 # => #<Money @fractional=200>\n```","summary":"<p>Multiplies the monetary value with the given <em>other</em> <code>Number</code> and returns a new <code><a href=\"../Money.html\">Money</a></code> object with this monetary value and the same <code>#currency</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L95","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L95","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"new_amount = (fractional * other).to_i\nMoney.new(new_amount, currency)\n"}},{"id":"+(other:Money):Money-instance-method","html_id":"+(other:Money):Money-instance-method","name":"+","doc":"Returns a new `Money` object containing the sum of the two\noperands' monetary values.\n\n```\nMoney.new(100) + Money.new(100) # => #<Money @fractional=200>\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the sum of the two operands' monetary values.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L71","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L71","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"with_same_currency(other) do |other|\n  Money.new(fractional + other.fractional, currency)\nend"}},{"id":"+:Money-instance-method","html_id":"+:Money-instance-method","name":"+","doc":"Alias of `#abs`.\n\n```\n+Money.new(-100) # => #<Money @fractional=100>\n```","summary":"<p>Alias of <code><a href=\"../Money/Arithmetic.html#abs%3AMoney-instance-method\">#abs</a></code>.</p>","abstract":false,"args":[],"args_string":" : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L52","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L52","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"abs"}},{"id":"-(other:Money):Money-instance-method","html_id":"-(other:Money):Money-instance-method","name":"-","doc":"Returns a new `Money` object containing the difference between the two\noperands' monetary values.\n\n```\nMoney.new(100) - Money.new(99) # => #<Money @fractional=1>\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the difference between the two operands' monetary values.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L83","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L83","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"with_same_currency(other) do |other|\n  Money.new(fractional - other.fractional, currency)\nend"}},{"id":"-:Money-instance-method","html_id":"-:Money-instance-method","name":"-","doc":"Returns a new `Money` object with changed polarity.\n\n```\n-Money.new(100) # => #<Money @fractional=-100>\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object with changed polarity.</p>","abstract":false,"args":[],"args_string":" : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L61","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L61","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"Money.new(-fractional, currency)"}},{"id":"/(other:Number):Money-instance-method","html_id":"/(other:Number):Money-instance-method","name":"/","doc":"Divides the monetary value with the given *other* `Number` and returns\na new `Money` object with this monetary value and the same `#currency`.\n\n```\nMoney.new(100) / 10 # => #<Money @fractional=10>\n```","summary":"<p>Divides the monetary value with the given <em>other</em> <code>Number</code> and returns a new <code><a href=\"../Money.html\">Money</a></code> object with this monetary value and the same <code>#currency</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L106","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L106","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"new_amount = fractional.to_big_d / other.to_big_d\nMoney.new(new_amount, currency)\n"}},{"id":"/(other:Money):Float64-instance-method","html_id":"/(other:Money):Float64-instance-method","name":"/","doc":"Divides the monetary value with the given *other* `Money` object and\nreturns a ratio.\n\n```\nMoney.new(100) / Money.new(10) # => 10.0\n```","summary":"<p>Divides the monetary value with the given <em>other</em> <code><a href=\"../Money.html\">Money</a></code> object and returns a ratio.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Float64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L117","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L117","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"with_same_currency(other) do |other|\n  fractional.to_f / other.fractional.to_f\nend"}},{"id":"abs:Money-instance-method","html_id":"abs:Money-instance-method","name":"abs","doc":"Returns absolute value of `self` as a new `Money` object.\n\n```\nMoney.new(-100).abs # => #<Money @fractional=100>\n```","summary":"<p>Returns absolute value of <code>self</code> as a new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[],"args_string":" : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L43","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L43","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"Money.new(fractional.abs, currency)"}},{"id":"divmod(other:Money):::Tuple(Int64,Money)-instance-method","html_id":"divmod(other:Money):::Tuple(Int64,Money)-instance-method","name":"divmod","doc":"Divide by `Money` or `Number` and return `Tuple` containing\nquotient and modulus.\n\n```\nMoney.new(100).divmod(9)            # => {#<Money @fractional=11>, #<Money @fractional=1>}\nMoney.new(100).divmod(Money.new(9)) # => {11, #<Money @fractional=1>}\n```","summary":"<p>Divide by <code><a href=\"../Money.html\">Money</a></code> or <code>Number</code> and return <code>Tuple</code> containing quotient and modulus.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : ::Tuple(Int64, Money)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L130","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L130","def":{"name":"divmod","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Int64, Money)","visibility":"Public","body":"with_same_currency(other) do |other|\n  quotient, remainder = fractional.divmod(other.fractional)\n  {quotient, Money.new(remainder, currency)}\nend"}},{"id":"divmod(other:Number):::Tuple(Money,Money)-instance-method","html_id":"divmod(other:Number):::Tuple(Money,Money)-instance-method","name":"divmod","doc":"Divide by `Money` or `Number` and return `Tuple` containing\nquotient and modulus.\n\n```\nMoney.new(100).divmod(9)            # => {#<Money @fractional=11>, #<Money @fractional=1>}\nMoney.new(100).divmod(Money.new(9)) # => {11, #<Money @fractional=1>}\n```","summary":"<p>Divide by <code><a href=\"../Money.html\">Money</a></code> or <code>Number</code> and return <code>Tuple</code> containing quotient and modulus.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : ::Tuple(Money, Money)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L138","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L138","def":{"name":"divmod","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Money, Money)","visibility":"Public","body":"quotient, remainder = fractional.divmod(other.to_i)\n{Money.new(quotient, currency), Money.new(remainder, currency)}\n"}},{"id":"modulo(other):Money-instance-method","html_id":"modulo(other):Money-instance-method","name":"modulo","doc":"Equivalent to `#divmod(other)[1]`.\n\n```\nMoney.new(100).modulo(9)            # => #<Money @fractional=1>\nMoney.new(100).modulo(Money.new(9)) # => #<Money @fractional=1>\n```","summary":"<p>Equivalent to <code><a href=\"../Money/Arithmetic.html#divmod%28other%3AMoney%29%3A%3A%3ATuple%28Int64%2CMoney%29-instance-method\">#divmod(other)</a>[1]</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L149","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L149","def":{"name":"modulo","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"(divmod(other))[1]"}},{"id":"negative?-instance-method","html_id":"negative?-instance-method","name":"negative?","doc":"Returns `true` if the money amount is less than 0, `false` otherwise.\n\n```\nMoney.new(-1).negative? # => true\nMoney.new(0).negative?  # => false\nMoney.new(1).negative?  # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is less than 0, <code>false</code> otherwise.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L23","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L23","def":{"name":"negative?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fractional < 0"}},{"id":"positive?-instance-method","html_id":"positive?-instance-method","name":"positive?","doc":"Returns `true` if the money amount is greater than 0, `false` otherwise.\n\n```\nMoney.new(1).positive?  # => true\nMoney.new(0).positive?  # => false\nMoney.new(-1).positive? # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is greater than 0, <code>false</code> otherwise.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L12","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L12","def":{"name":"positive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fractional > 0"}},{"id":"remainder(other:Number):Money-instance-method","html_id":"remainder(other:Number):Money-instance-method","name":"remainder","doc":"If different signs `#modulo(other) - other`, otherwise `#modulo(other)`.\n\n```\nMoney.new(100).remainder(9) # => #<Money @fractional=1>\n```","summary":"<p>If different signs <code><a href=\"../Money/Arithmetic.html#modulo%28other%29%3AMoney-instance-method\">#modulo(other)</a> - other</code>, otherwise <code><a href=\"../Money/Arithmetic.html#modulo%28other%29%3AMoney-instance-method\">#modulo(other)</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L163","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L163","def":{"name":"remainder","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"if (fractional < 0 && other < 0) || (fractional > 0 && other > 0)\n  modulo(other)\nelse\n  (modulo(other)) - (Money.new(other, currency))\nend"}},{"id":"zero?-instance-method","html_id":"zero?-instance-method","name":"zero?","doc":"Returns `true` if the money amount is zero.\n\n```\nMoney.new(0).zero?    # => true\nMoney.new(100).zero?  # => false\nMoney.new(-100).zero? # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is zero.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L34","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/arithmetic.cr#L34","def":{"name":"zero?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fractional == 0"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Bank","path":"Money/Bank.html","kind":"class","full_name":"Money::Bank","name":"Bank","abstract":true,"superclass":{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/bank.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crystal-money/money/Money/Bank/SingleCurrency","kind":"class","full_name":"Money::Bank::SingleCurrency","name":"SingleCurrency"},{"html_id":"github.com/crystal-money/money/Money/Bank/VariableExchange","kind":"class","full_name":"Money::Bank::VariableExchange","name":"VariableExchange"}],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[{"id":"default_store-class-method","html_id":"default_store-class-method","name":"default_store","doc":"It defaults to using an in-memory, thread safe store instance for\nstoring exchange rates.","summary":"<p>It defaults to using an in-memory, thread safe store instance for storing exchange rates.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L5","def":{"name":"default_store","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_store || (@@default_store = begin\n  Currency::RateStore::Memory.new\nend)"}},{"id":"default_store=(default_store:Currency::RateStore)-class-method","html_id":"default_store=(default_store:Currency::RateStore)-class-method","name":"default_store=","doc":null,"summary":null,"abstract":false,"args":[{"name":"default_store","doc":null,"default_value":"","external_name":"default_store","restriction":"Currency::RateStore"}],"args_string":"(default_store : Currency::RateStore)","source_link":null,"source_link":null,"def":{"name":"default_store=","args":[{"name":"default_store","doc":null,"default_value":"","external_name":"default_store","restriction":"Currency::RateStore"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_store = default_store"}}],"constructors":[{"id":"new(store=nil)-class-method","html_id":"new(store=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"store","doc":null,"default_value":"nil","external_name":"store","restriction":""}],"args_string":"(store = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L10","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L10","def":{"name":"new","args":[{"name":"store","doc":null,"default_value":"nil","external_name":"store","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(store)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"exchange(from:Money,to:Currency):Money-instance-method","html_id":"exchange(from:Money,to:Currency):Money-instance-method","name":"exchange","doc":"Exchanges the given `Money` object to a new `Money` object in\n*to* `Currency`.","summary":"<p>Exchanges the given <code><a href=\"../Money.html\">Money</a></code> object to a new <code><a href=\"../Money.html\">Money</a></code> object in <em>to</em> <code><a href=\"../Money/Currency.html\">Currency</a></code>.</p>","abstract":true,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L15","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L15","def":{"name":"exchange","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":""}},{"id":"store-instance-method","html_id":"store-instance-method","name":"store","doc":"An exchange `Currency::RateStore` object, used to persist exchange rate pairs.","summary":"<p>An exchange <code><a href=\"../Money/Currency/RateStore.html\">Currency::RateStore</a></code> object, used to persist exchange rate pairs.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L8","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank.cr#L8","def":{"name":"store","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@store || (@store = begin\n  self.class.default_store\nend)"}},{"id":"store=(store:Currency::RateStore)-instance-method","html_id":"store=(store:Currency::RateStore)-instance-method","name":"store=","doc":null,"summary":null,"abstract":false,"args":[{"name":"store","doc":null,"default_value":"","external_name":"store","restriction":"Currency::RateStore"}],"args_string":"(store : Currency::RateStore)","source_link":null,"source_link":null,"def":{"name":"store=","args":[{"name":"store","doc":null,"default_value":"","external_name":"store","restriction":"Currency::RateStore"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@store = store"}}],"macros":[],"types":[{"html_id":"github.com/crystal-money/money/Money/Bank/SingleCurrency","path":"Money/Bank/SingleCurrency.html","kind":"class","full_name":"Money::Bank::SingleCurrency","name":"SingleCurrency","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Bank","kind":"class","full_name":"Money::Bank","name":"Bank"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Bank","kind":"class","full_name":"Money::Bank","name":"Bank"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/bank/single_currency.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/single_currency.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Bank","kind":"class","full_name":"Money::Bank","name":"Bank"},"doc":"Class to ensure client code is operating in a single currency\nby raising if an exchange attempts to happen.\n\nThis is useful when an application uses multiple currencies but\nit usually deals with only one currency at a time so any arithmetic\nwhere exchanges happen are erroneous. Using this as the default bank\nmeans that that these mistakes don't silently do the wrong thing.","summary":"<p>Class to ensure client code is operating in a single currency by raising if an exchange attempts to happen.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"exchange(from:Money,to:Currency):Money-instance-method","html_id":"exchange(from:Money,to:Currency):Money-instance-method","name":"exchange","doc":"Raises a `DifferentCurrencyError` to remove possibility of accidentally\nexchanging currencies.","summary":"<p>Raises a <code><a href=\"../../Money/DifferentCurrencyError.html\">DifferentCurrencyError</a></code> to remove possibility of accidentally exchanging currencies.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/single_currency.cr#L12","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/single_currency.cr#L12","def":{"name":"exchange","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"raise(DifferentCurrencyError.new(\"No exchanging of currencies allowed: #{from} #{from.currency} to #{to}\"))"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Bank/VariableExchange","path":"Money/Bank/VariableExchange.html","kind":"class","full_name":"Money::Bank::VariableExchange","name":"VariableExchange","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Bank","kind":"class","full_name":"Money::Bank","name":"Bank"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Bank","kind":"class","full_name":"Money::Bank","name":"Bank"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/bank/variable_exchange.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/variable_exchange.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Bank","kind":"class","full_name":"Money::Bank","name":"Bank"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"calculate_fractional(from:Money,to:Currency):BigDecimal-instance-method","html_id":"calculate_fractional(from:Money,to:Currency):BigDecimal-instance-method","name":"calculate_fractional","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : BigDecimal","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/variable_exchange.cr#L10","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/variable_exchange.cr#L10","def":{"name":"calculate_fractional","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal","visibility":"Public","body":"ratio = from.currency.subunit_to_unit.to_big_d / to.subunit_to_unit.to_big_d\nfrom.fractional.to_big_d / ratio\n"}},{"id":"exchange(from:Money,to:Currency):Money-instance-method","html_id":"exchange(from:Money,to:Currency):Money-instance-method","name":"exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/variable_exchange.cr#L3","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/bank/variable_exchange.cr#L3","def":{"name":"exchange","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Money"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"rate = store[from.currency, to]\nfractional = calculate_fractional(from, to)\nfractional = fractional * rate\nMoney.new(fractional.to_i64, to)\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/crystal-money/money/Money/Casting","path":"Money/Casting.html","kind":"module","full_name":"Money::Casting","name":"Casting","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/casting.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/casting.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"}],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_big_d:BigDecimal-instance-method","html_id":"to_big_d:BigDecimal-instance-method","name":"to_big_d","doc":"Returns the amount of money as a `BigDecimal`.\n\n```\nMoney.us_dollar(1_00).to_big_d # => BigDecimal.new(\"1.00\")\n```","summary":"<p>Returns the amount of money as a <code>BigDecimal</code>.</p>","abstract":false,"args":[],"args_string":" : BigDecimal","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/casting.cr#L8","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/casting.cr#L8","def":{"name":"to_big_d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal","visibility":"Public","body":"BigDecimal.new(fractional, currency.exponent)"}},{"id":"to_f:Float64-instance-method","html_id":"to_f:Float64-instance-method","name":"to_f","doc":"Returns the amount of money as a `Float`. Floating points cannot guarantee\nprecision. Therefore, this function should only be used when you no longer\nneed to represent currency or working with another system that requires\nfloats.\n\n```\nMoney.us_dollar(100).to_f # => 1.0\n```","summary":"<p>Returns the amount of money as a <code>Float</code>.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/casting.cr#L20","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/casting.cr#L20","def":{"name":"to_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"to_big_d.to_f"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Constructors","path":"Money/Constructors.html","kind":"module","full_name":"Money::Constructors","name":"Constructors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/constructors.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"bitcoin(cents)-instance-method","html_id":"bitcoin(cents)-instance-method","name":"bitcoin","doc":"Creates a new `Money` object of the given value, using the\nBitcoin cryptocurrency.\n\n```\nMoney.bitcoin(100) # => #<Money @fractional=100 @currency=\"BTC\">\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the Bitcoin cryptocurrency.</p>","abstract":false,"args":[{"name":"cents","doc":null,"default_value":"","external_name":"cents","restriction":""}],"args_string":"(cents)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L54","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L54","def":{"name":"bitcoin","args":[{"name":"cents","doc":null,"default_value":"","external_name":"cents","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(cents, \"BTC\")"}},{"id":"euro(cents)-instance-method","html_id":"euro(cents)-instance-method","name":"euro","doc":"Creates a new `Money` object of the given value, using the\nEuro currency.\n\n```\nMoney.euro(100) # => #<Money @fractional=100 @currency=\"EUR\">\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the Euro currency.</p>","abstract":false,"args":[{"name":"cents","doc":null,"default_value":"","external_name":"cents","restriction":""}],"args_string":"(cents)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L44","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L44","def":{"name":"euro","args":[{"name":"cents","doc":null,"default_value":"","external_name":"cents","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(cents, \"EUR\")"}},{"id":"from_amount(amount:Number|String,currency=default_currency):Money-instance-method","html_id":"from_amount(amount:Number|String,currency=default_currency):Money-instance-method","name":"from_amount","doc":"Creates a new `Money` object of value given in the *unit* of the given\n*currency*.\n\n```\nMoney.from_amount(23.45, \"USD\") # => #<Money @fractional=2345 @currency=\"USD\">\nMoney.from_amount(23.45, \"JPY\") # => #<Money @fractional=23 @currency=\"JPY\">\n```\n\nSee `#initialize`.","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of value given in the <em>unit</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Number | String"},{"name":"currency","doc":null,"default_value":"default_currency","external_name":"currency","restriction":""}],"args_string":"(amount : Number | String, currency = default_currency) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L12","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L12","def":{"name":"from_amount","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Number | String"},{"name":"currency","doc":null,"default_value":"default_currency","external_name":"currency","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"currency = Currency.wrap(currency)\nvalue = (amount.to_big_d * currency.subunit_to_unit).round\nnew(value, currency)\n"}},{"id":"us_dollar(cents)-instance-method","html_id":"us_dollar(cents)-instance-method","name":"us_dollar","doc":"Creates a new `Money` object of the given value, using the\nAmerican dollar currency.\n\n```\nMoney.us_dollar(100) # => #<Money @fractional=100 @currency=\"USD\">\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the American dollar currency.</p>","abstract":false,"args":[{"name":"cents","doc":null,"default_value":"","external_name":"cents","restriction":""}],"args_string":"(cents)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L34","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L34","def":{"name":"us_dollar","args":[{"name":"cents","doc":null,"default_value":"","external_name":"cents","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(cents, \"USD\")"}},{"id":"zero(currency=default_currency):Money-instance-method","html_id":"zero(currency=default_currency):Money-instance-method","name":"zero","doc":"Creates a new `Money` object with value `0`.\n\n```\nMoney.zero       # => #<Money @fractional=0>\nMoney.zero(:pln) # => #<Money @fractional=0 @currency=\"PLN\">\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object with value <code>0</code>.</p>","abstract":false,"args":[{"name":"currency","doc":null,"default_value":"default_currency","external_name":"currency","restriction":""}],"args_string":"(currency = default_currency) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L24","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/constructors.cr#L24","def":{"name":"zero","args":[{"name":"currency","doc":null,"default_value":"default_currency","external_name":"currency","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"new(0, currency)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Currency","path":"Money/Currency.html","kind":"class","full_name":"Money::Currency","name":"Currency","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-money/money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-money/money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/currency/enumeration.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr"},{"filename":"money/currency/json.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/json.cr"},{"filename":"money/currency/loader.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/loader.cr"},{"filename":"money/currency/rate.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr"},{"filename":"money/currency/rate_store.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr"},{"filename":"money/currency/rate_store/memory.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr"},{"filename":"money/currency.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-money/money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-money/money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[{"html_id":"github.com/crystal-money/money/Money/Currency/Enumeration","kind":"module","full_name":"Money::Currency::Enumeration","name":"Enumeration"},{"html_id":"github.com/crystal-money/money/Money/Currency/Loader","kind":"module","full_name":"Money::Currency::Loader","name":"Loader"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":"Represents a specific currency unit.\n\nSee [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).","summary":"<p>Represents a specific currency unit.</p>","class_methods":[{"id":"register(currency:Currency)-class-method","html_id":"register(currency:Currency)-class-method","name":"register","doc":null,"summary":null,"abstract":false,"args":[{"name":"currency","doc":null,"default_value":"","external_name":"currency","restriction":"Currency"}],"args_string":"(currency : Currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L17","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L17","def":{"name":"register","args":[{"name":"currency","doc":null,"default_value":"","external_name":"currency","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table[currency.id] = currency"}},{"id":"table-class-method","html_id":"table-class-method","name":"table","doc":"List of known currencies.","summary":"<p>List of known currencies.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L15","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L15","def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@table || (@@table = begin\n  load_currencies\nend)"}},{"id":"unregister(currency:Currency)-class-method","html_id":"unregister(currency:Currency)-class-method","name":"unregister","doc":null,"summary":null,"abstract":false,"args":[{"name":"currency","doc":null,"default_value":"","external_name":"currency","restriction":"Currency"}],"args_string":"(currency : Currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L21","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L21","def":{"name":"unregister","args":[{"name":"currency","doc":null,"default_value":"","external_name":"currency","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table.delete(currency.id)"}},{"id":"unregister(currency_code:String|Symbol)-class-method","html_id":"unregister(currency_code:String|Symbol)-class-method","name":"unregister","doc":null,"summary":null,"abstract":false,"args":[{"name":"currency_code","doc":null,"default_value":"","external_name":"currency_code","restriction":"String | Symbol"}],"args_string":"(currency_code : String | Symbol)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L25","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L25","def":{"name":"unregister","args":[{"name":"currency_code","doc":null,"default_value":"","external_name":"currency_code","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(find?(currency_code)).try do |currency|\n  table.delete(currency.id)\nend"}}],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/json.cr#L20","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/json.cr#L20","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case pull.kind\nwhen :string\n  find(pull.read_string)\nelse\n  previous_def(pull)\nend"}},{"id":"wrap(value:String|Symbol|Currency|Nil):Currency-class-method","html_id":"wrap(value:String|Symbol|Currency|Nil):Currency-class-method","name":"wrap","doc":"Wraps the *value* in a `Currency` object.\n\n```\nc1 = Money::Currency.find(:usd)\nMoney::Currency.wrap?(c1)    # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(\"usd\") # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(:usd)  # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(nil)   # => nil\n```","summary":"<p>Wraps the <em>value</em> in a <code><a href=\"../Money/Currency.html\">Currency</a></code> object.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Symbol | Currency | Nil"}],"args_string":"(value : String | Symbol | Currency | Nil) : Currency","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L49","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L49","def":{"name":"wrap","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Symbol | Currency | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency","visibility":"Public","body":"(wrap?(value)) || (raise(UnknownCurrencyError.new(\"Can't find currency: #{value}\")))"}},{"id":"wrap?(value:String|Symbol|Currency|Nil):Currency?-class-method","html_id":"wrap?(value:String|Symbol|Currency|Nil):Currency?-class-method","name":"wrap?","doc":"Wraps the *value* in a `Currency` object.\n\n```\nc1 = Money::Currency.find(:usd)\nMoney::Currency.wrap?(c1)    # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(\"usd\") # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(:usd)  # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(nil)   # => nil\n```","summary":"<p>Wraps the <em>value</em> in a <code><a href=\"../Money/Currency.html\">Currency</a></code> object.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Symbol | Currency | Nil"}],"args_string":"(value : String | Symbol | Currency | Nil) : Currency?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L40","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L40","def":{"name":"wrap?","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Symbol | Currency | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency | ::Nil","visibility":"Public","body":"case value\nwhen String, Symbol\n  find(value)\nwhen Currency\n  value\nwhen Nil\n  nil\nend"}}],"instance_methods":[{"id":"(other:Currency):Int32-instance-method","html_id":"(other:Currency):Int32-instance-method","name":"<=>","doc":"Compares `self` with *other* currency against the value of\n`priority` and `id` attributes.","summary":"<p>Compares <code>self</code> with <em>other</em> currency against the value of <code><a href=\"../Money/Currency.html#priority%3AInt32-instance-method\">#priority</a></code> and <code><a href=\"../Money/Currency.html#id-instance-method\">#id</a></code> attributes.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Currency"}],"args_string":"(other : Currency) : Int32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L95","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L95","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"comparison = priority <=> other.priority\nif comparison == 0\n  return id <=> other.id\nend\ncomparison\n"}},{"id":"(other:String|Symbol):Int32-instance-method","html_id":"(other:String|Symbol):Int32-instance-method","name":"<=>","doc":"Compares `self` with *other* currency against the value of id` attribute.","summary":"<p>Compares <code>self</code> with <em>other</em> currency against the value of id` attribute.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String | Symbol"}],"args_string":"(other : String | Symbol) : Int32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L102","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L102","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"id <=> other.to_s.downcase"}},{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : self)","source_link":null,"source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if id == other.id\nelse\n  return false\nend\ntrue\n"}},{"id":"alternate_symbols:Array(String)?-instance-method","html_id":"alternate_symbols:Array(String)?-instance-method","name":"alternate_symbols","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L58","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L58","def":{"name":"alternate_symbols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@alternate_symbols"}},{"id":"code:String-instance-method","html_id":"code:String-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L55","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L55","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@code"}},{"id":"decimal_mark:String?-instance-method","html_id":"decimal_mark:String?-instance-method","name":"decimal_mark","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L63","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L63","def":{"name":"decimal_mark","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@decimal_mark"}},{"id":"decimal_places:Int32-instance-method","html_id":"decimal_places:Int32-instance-method","name":"decimal_places","doc":"Alias of `#exponent`.","summary":"<p>Alias of <code><a href=\"../Money/Currency.html#exponent%3AInt32-instance-method\">#exponent</a></code>.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L82","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L82","def":{"name":"decimal_places","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"exponent"}},{"id":"exponent:Int32-instance-method","html_id":"exponent:Int32-instance-method","name":"exponent","doc":"Returns the relation between subunit and unit as a base 10 exponent.\n\nNOTE: MGA and MRO are exceptions and are rounded to 1.\n\nSee [Active_codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).","summary":"<p>Returns the relation between subunit and unit as a base 10 exponent.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L77","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L77","def":{"name":"exponent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(Math.log10(subunit_to_unit)).round.to_i"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = id.hash(hasher)\nhasher\n"}},{"id":"html_entity:String?-instance-method","html_id":"html_entity:String?-instance-method","name":"html_entity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L62","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L62","def":{"name":"html_entity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@html_entity"}},{"id":"id-instance-method","html_id":"id-instance-method","name":"id","doc":"Currency ID, for time being lower-cased `#code`.","summary":"<p>Currency ID, for time being lower-cased <code><a href=\"../Money/Currency.html#code%3AString-instance-method\">#code</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L68","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L68","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id || (@id = begin\n  code.downcase\nend)"}},{"id":"iso?-instance-method","html_id":"iso?-instance-method","name":"iso?","doc":"Returns `true` if iso currency.\n\nSee `#iso_numeric`.","summary":"<p>Returns <code>true</code> if iso currency.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L89","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L89","def":{"name":"iso?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!iso_numeric)"}},{"id":"iso_numeric:UInt32?-instance-method","html_id":"iso_numeric:UInt32?-instance-method","name":"iso_numeric","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L54","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L54","def":{"name":"iso_numeric","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@iso_numeric"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L56","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L56","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"priority:Int32-instance-method","html_id":"priority:Int32-instance-method","name":"priority","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L53","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L53","def":{"name":"priority","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@priority"}},{"id":"smallest_denomination:UInt32?-instance-method","html_id":"smallest_denomination:UInt32?-instance-method","name":"smallest_denomination","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L65","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L65","def":{"name":"smallest_denomination","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@smallest_denomination"}},{"id":"subunit:String?-instance-method","html_id":"subunit:String?-instance-method","name":"subunit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L59","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L59","def":{"name":"subunit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@subunit"}},{"id":"subunit_to_unit:UInt64-instance-method","html_id":"subunit_to_unit:UInt64-instance-method","name":"subunit_to_unit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L60","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L60","def":{"name":"subunit_to_unit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@subunit_to_unit"}},{"id":"symbol:String?-instance-method","html_id":"symbol:String?-instance-method","name":"symbol","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L57","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L57","def":{"name":"symbol","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@symbol"}},{"id":"symbol_first?:Bool-instance-method","html_id":"symbol_first?:Bool-instance-method","name":"symbol_first?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L61","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L61","def":{"name":"symbol_first?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@symbol_first"}},{"id":"thousands_separator:String?-instance-method","html_id":"thousands_separator:String?-instance-method","name":"thousands_separator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L64","def":{"name":"thousands_separator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@thousands_separator"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/json.cr#L4","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/json.cr#L4","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _priority = @priority\n  if _priority.nil?\n  else\n    json.field(\"priority\") do\n      _priority.to_json(json)\n    end\n  end\n  _iso_numeric = @iso_numeric\n  if _iso_numeric.nil?\n  else\n    json.field(\"iso_numeric\") do\n      _iso_numeric.to_json(json)\n    end\n  end\n  _code = @code\n  if _code.nil?\n  else\n    json.field(\"code\") do\n      _code.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _symbol = @symbol\n  if _symbol.nil?\n  else\n    json.field(\"symbol\") do\n      _symbol.to_json(json)\n    end\n  end\n  _alternate_symbols = @alternate_symbols\n  if _alternate_symbols.nil?\n  else\n    json.field(\"alternate_symbols\") do\n      _alternate_symbols.to_json(json)\n    end\n  end\n  _subunit = @subunit\n  if _subunit.nil?\n  else\n    json.field(\"subunit\") do\n      _subunit.to_json(json)\n    end\n  end\n  _subunit_to_unit = @subunit_to_unit\n  if _subunit_to_unit.nil?\n  else\n    json.field(\"subunit_to_unit\") do\n      _subunit_to_unit.to_json(json)\n    end\n  end\n  _symbol_first = @symbol_first\n  if _symbol_first.nil?\n  else\n    json.field(\"symbol_first\") do\n      _symbol_first.to_json(json)\n    end\n  end\n  _html_entity = @html_entity\n  if _html_entity.nil?\n  else\n    json.field(\"html_entity\") do\n      _html_entity.to_json(json)\n    end\n  end\n  _decimal_mark = @decimal_mark\n  if _decimal_mark.nil?\n  else\n    json.field(\"decimal_mark\") do\n      _decimal_mark.to_json(json)\n    end\n  end\n  _thousands_separator = @thousands_separator\n  if _thousands_separator.nil?\n  else\n    json.field(\"thousands_separator\") do\n      _thousands_separator.to_json(json)\n    end\n  end\n  _smallest_denomination = @smallest_denomination\n  if _smallest_denomination.nil?\n  else\n    json.field(\"smallest_denomination\") do\n      _smallest_denomination.to_json(json)\n    end\n  end\nend"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":"Appends a string representation corresponding to the `#code` property\nto the given *io*.\n\n```\nMoney::Currency.find(:usd).to_s # => \"USD\"\nMoney::Currency.find(:eur).to_s # => \"EUR\"\n```","summary":"<p>Appends a string representation corresponding to the <code><a href=\"../Money/Currency.html#code%3AString-instance-method\">#code</a></code> property to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L113","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency.cr#L113","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << code"}}],"macros":[],"types":[{"html_id":"github.com/crystal-money/money/Money/Currency/Enumeration","path":"Money/Currency/Enumeration.html","kind":"module","full_name":"Money::Currency::Enumeration","name":"Enumeration","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/crystal-money/money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"money/currency/enumeration.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-money/money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"[](key:String|Symbol):Currency-instance-method","html_id":"[](key:String|Symbol):Currency-instance-method","name":"[]","doc":"Lookup a currency with given *key* an returns a `Currency` instance on\nsuccess, raises `UnknownCurrencyError` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @id=\"eur\">\nMoney::Currency.find(\"FOO\") # => raises UnknownCurrencyError\n```","summary":"<p>Lookup a currency with given <em>key</em> an returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, raises <code><a href=\"../../Money/UnknownCurrencyError.html\">UnknownCurrencyError</a></code> otherwise.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L34","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L34","def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency","visibility":"Public","body":"find(key)"}},{"id":"[]?(key:String|Symbol):Currency?-instance-method","html_id":"[]?(key:String|Symbol):Currency?-instance-method","name":"[]?","doc":"Lookup a currency with given *key* an returns a `Currency` instance on\nsuccess, `nil` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @id=\"eur\">\nMoney::Currency.find(\"FOO\") # => nil\n```","summary":"<p>Lookup a currency with given <em>key</em> an returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L18","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L18","def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency | ::Nil","visibility":"Public","body":"find?(key)"}},{"id":"all:Array(Currency)-instance-method","html_id":"all:Array(Currency)-instance-method","name":"all","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L38","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L38","def":{"name":"all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Currency)","visibility":"Public","body":"table.values.sort"}},{"id":"each(&block):Void-instance-method","html_id":"each(&amp;block):Void-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block) : Void","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L42","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L42","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Void","visibility":"Public","body":"all.each do |*args|\n  yield *args\nend"}},{"id":"find(key:String|Symbol):Currency-instance-method","html_id":"find(key:String|Symbol):Currency-instance-method","name":"find","doc":"Lookup a currency with given *key* an returns a `Currency` instance on\nsuccess, raises `UnknownCurrencyError` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @id=\"eur\">\nMoney::Currency.find(\"FOO\") # => raises UnknownCurrencyError\n```","summary":"<p>Lookup a currency with given <em>key</em> an returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, raises <code><a href=\"../../Money/UnknownCurrencyError.html\">UnknownCurrencyError</a></code> otherwise.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L29","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L29","def":{"name":"find","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency","visibility":"Public","body":"table[key.to_s.downcase]? || (raise(UnknownCurrencyError.new(\"Can't find currency: #{key}\")))"}},{"id":"find?(key:String|Symbol):Currency?-instance-method","html_id":"find?(key:String|Symbol):Currency?-instance-method","name":"find?","doc":"Lookup a currency with given *key* an returns a `Currency` instance on\nsuccess, `nil` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @id=\"eur\">\nMoney::Currency.find(\"FOO\") # => nil\n```","summary":"<p>Lookup a currency with given <em>key</em> an returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L13","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/enumeration.cr#L13","def":{"name":"find?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Currency | ::Nil","visibility":"Public","body":"table[key.to_s.downcase]?"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Currency/Loader","path":"Money/Currency/Loader.html","kind":"module","full_name":"Money::Currency::Loader","name":"Loader","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/currency/loader.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/loader.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"DATA_PATH","value":"File.expand_path(\"../../../../data/currencies\", \"/Users/sija/Code/money.cr/src/money/currency/loader.cr\")","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"load_currencies-instance-method","html_id":"load_currencies-instance-method","name":"load_currencies","doc":"Loads and returns the currencies stored in JSON files\ninside of `data/currencies` directory.","summary":"<p>Loads and returns the currencies stored in JSON files inside of <code>data/currencies</code> directory.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/loader.cr#L10","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/loader.cr#L10","def":{"name":"load_currencies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"currency_table = {} of String => Currency\nDir.each_child(DATA_PATH) do |filename|\n  (parse_currency_file(filename)).try do |currency|\n    currency_table[currency.id] = currency\n  end\nend\ncurrency_table\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Currency/Rate","path":"Money/Currency/Rate.html","kind":"struct","full_name":"Money::Currency::Rate","name":"Rate","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-money/money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-money/money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/currency/rate.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from:Currency,to:Currency,value:Int64)-class-method","html_id":"new(from:Currency,to:Currency,value:Int64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Currency"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(from : Currency, to : Currency, value : Int64)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L4","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L4","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Currency"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_54:JSON::PullParser)-class-method","html_id":"new(__temp_54:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_54","doc":null,"default_value":"","external_name":"__temp_54","restriction":"::JSON::PullParser"}],"args_string":"(__temp_54 : JSON::PullParser)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"new","args":[{"name":"__temp_54","doc":null,"default_value":"","external_name":"__temp_54","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_54)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L4","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L4","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Rate.new(@from.clone, @to.clone, @value.clone)"}},{"id":"from:Money::Currency-instance-method","html_id":"from:Money::Currency-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Money::Currency","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from"}},{"id":"from=(_from:Currency)-instance-method","html_id":"from=(_from:Currency)-instance-method","name":"from=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_from","doc":null,"default_value":"","external_name":"_from","restriction":"Currency"}],"args_string":"(_from : Currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"from=","args":[{"name":"_from","doc":null,"default_value":"","external_name":"_from","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from = _from"}},{"id":"to:Money::Currency-instance-method","html_id":"to:Money::Currency-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Money::Currency","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to"}},{"id":"to=(_to:Currency)-instance-method","html_id":"to=(_to:Currency)-instance-method","name":"to=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_to","doc":null,"default_value":"","external_name":"_to","restriction":"Currency"}],"args_string":"(_to : Currency)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"to=","args":[{"name":"_to","doc":null,"default_value":"","external_name":"_to","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to = _to"}},{"id":"to_big_d:BigDecimal-instance-method","html_id":"to_big_d:BigDecimal-instance-method","name":"to_big_d","doc":"Returns conversion rate `value` as `BigDecimal` object.","summary":"<p>Returns conversion rate <code><a href=\"../../Money/Currency/Rate.html#value%3AInt64-instance-method\">#value</a></code> as <code>BigDecimal</code> object.</p>","abstract":false,"args":[],"args_string":" : BigDecimal","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L30","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L30","def":{"name":"to_big_d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal","visibility":"Public","body":"BigDecimal.new(@value, @to.exponent)"}},{"id":"to_f64:Float64-instance-method","html_id":"to_f64:Float64-instance-method","name":"to_f64","doc":"Returns conversion rate `value` as `Float64`.","summary":"<p>Returns conversion rate <code><a href=\"../../Money/Currency/Rate.html#value%3AInt64-instance-method\">#value</a></code> as <code>Float64</code>.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L25","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L25","def":{"name":"to_f64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"to_big_d.to_f"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":"Returns conversion rate `value` as `Int64`.","summary":"<p>Returns conversion rate <code><a href=\"../../Money/Currency/Rate.html#value%3AInt64-instance-method\">#value</a></code> as <code>Int64</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L20","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L20","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L11","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L11","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  json.field(\"from\", @from.to_s)\n  json.field(\"to\", @to.to_s)\n  json.field(\"value\", to_f)\nend"}},{"id":"to_money:Money-instance-method","html_id":"to_money:Money-instance-method","name":"to_money","doc":"Returns conversion rate `value` as `Money` object.","summary":"<p>Returns conversion rate <code><a href=\"../../Money/Currency/Rate.html#value%3AInt64-instance-method\">#value</a></code> as <code><a href=\"../../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[],"args_string":" : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L35","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L35","def":{"name":"to_money","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"Money.new(@value, @to)"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L39","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L39","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((((io << @from) << \" -> \") << @to) << \": \") << to_big_d"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"value=(_value:Int64)-instance-method","html_id":"value=(_value:Int64)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_value","doc":null,"default_value":"","external_name":"_value","restriction":"Int64"}],"args_string":"(_value : Int64)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate.cr#L5","def":{"name":"value=","args":[{"name":"_value","doc":null,"default_value":"","external_name":"_value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = _value"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Currency/RateStore","path":"Money/Currency/RateStore.html","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore","abstract":true,"superclass":{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-money/money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/currency/rate_store.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-money/money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/crystal-money/money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"}],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"[](from,to):BigDecimal-instance-method","html_id":"[](from,to):BigDecimal-instance-method","name":"[]","doc":"Retrieve the rate for the given currencies.\nNOTE: Uses `transaction` to synchronize data access.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\nstore[\"USD\", \"CAD\"]? # => 1.24515\n```","summary":"<p>Retrieve the rate for the given currencies.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(from, to) : BigDecimal","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L42","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L42","def":{"name":"[]","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal","visibility":"Public","body":"from, to = Currency.wrap(from), Currency.wrap(to)\nself[from, to]? || (raise(UnknownRateError.new(\"No conversion rate known for #{from} -> #{to}\")))\n"}},{"id":"[]=(from,to,value:Number):Void-instance-method","html_id":"[]=(from,to,value:Number):Void-instance-method","name":"[]=","doc":"Registers a conversion rate and returns it.\nNOTE: Uses `transaction` to synchronize data access.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\nstore[\"CAD\", \"USD\"] = 0.803115\n```","summary":"<p>Registers a conversion rate and returns it.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"args_string":"(from, to, value : Number) : Void","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L19","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L19","def":{"name":"[]=","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"from, to = Currency.wrap(from), Currency.wrap(to)\nvalue = (value.to_big_d * to.subunit_to_unit).round\ntransaction do\n  add_rate(from, to, value.to_i64)\nend\n"}},{"id":"[]?(from,to):BigDecimal?-instance-method","html_id":"[]?(from,to):BigDecimal?-instance-method","name":"[]?","doc":"Retrieve the rate for the given currencies.\nNOTE: Uses `transaction` to synchronize data access.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\nstore[\"USD\", \"CAD\"]? # => 1.24515\n```","summary":"<p>Retrieve the rate for the given currencies.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(from, to) : BigDecimal?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L36","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L36","def":{"name":"[]?","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigDecimal | ::Nil","visibility":"Public","body":"from, to = Currency.wrap(from), Currency.wrap(to)\ntransaction do\n  (get_rate?(from, to)).try(&.to_big_d)\nend\n"}},{"id":"add_rate(from:Currency,to:Currency,value:Int64):Void-instance-method","html_id":"add_rate(from:Currency,to:Currency,value:Int64):Void-instance-method","name":"add_rate","doc":"See `#[]=`.","summary":"<p>See <code><a href=\"../../Money/Currency/RateStore.html#%5B%5D%3D%28from%2Cto%2Cvalue%3ANumber%29%3AVoid-instance-method\">#[]=</a></code>.</p>","abstract":true,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Currency"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(from : Currency, to : Currency, value : Int64) : Void","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L9","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L9","def":{"name":"add_rate","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Currency"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":""}},{"id":"clear:Void-instance-method","html_id":"clear:Void-instance-method","name":"clear","doc":"Empties currency rate index.\nNOTE: Uses `transaction` to synchronize data access.","summary":"<p>Empties currency rate index.</p>","abstract":false,"args":[],"args_string":" : Void","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L61","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L61","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"transaction do\n  clear_rates\nend"}},{"id":"clear_rates:Void-instance-method","html_id":"clear_rates:Void-instance-method","name":"clear_rates","doc":"See `#clear`.","summary":"<p>See <code><a href=\"../../Money/Currency/RateStore.html#clear%3AVoid-instance-method\">#clear</a></code>.</p>","abstract":true,"args":[],"args_string":" : Void","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L57","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L57","def":{"name":"clear_rates","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":""}},{"id":"each(&block:T->_)-instance-method","html_id":"each(&amp;block:T-&gt;_)-instance-method","name":"each","doc":"Iterates over list of `Rate` objects.\n\n```\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Iterates over list of <code><a href=\"../../Money/Currency/Rate.html\">Rate</a></code> objects.</p>","abstract":true,"args":[],"args_string":"(&block : T -> _)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L54","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L54","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> _)"},"return_type":"","visibility":"Public","body":""}},{"id":"get_rate?(from:Currency,to:Currency):Rate?-instance-method","html_id":"get_rate?(from:Currency,to:Currency):Rate?-instance-method","name":"get_rate?","doc":"See `#[]?`.","summary":"<p>See <code><a href=\"../../Money/Currency/RateStore.html#%5B%5D%3F%28from%2Cto%29%3ABigDecimal%3F-instance-method\">#[]?</a></code>.</p>","abstract":true,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Currency"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"args_string":"(from : Currency, to : Currency) : Rate?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L26","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L26","def":{"name":"get_rate?","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Currency"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Currency"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Rate | ::Nil","visibility":"Public","body":""}},{"id":"transaction(&block:->_)-instance-method","html_id":"transaction(&amp;block:-&gt;_)-instance-method","name":"transaction","doc":"Wraps block execution in a concurrency-safe transaction.","summary":"<p>Wraps block execution in a concurrency-safe transaction.</p>","abstract":true,"args":[],"args_string":"(&block :  -> _)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L6","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store.cr#L6","def":{"name":"transaction","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> _)"},"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/crystal-money/money/Money/Currency/RateStore/Memory","path":"Money/Currency/RateStore/Memory.html","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},{"html_id":"github.com/crystal-money/money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/currency/rate_store/memory.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"INDEX_KEY_SEPARATOR","value":"'_'","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"doc":"Class for concurrency-safe storage of exchange rate pairs.\nUsed by instances of `Currency::VariableExchange`.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Class for concurrency-safe storage of exchange rate pairs.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes a new `RateStore::Memory` object.","summary":"<p>Initializes a new <code><a href=\"../../../Money/Currency/RateStore/Memory.html\">RateStore::Memory</a></code> object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr#L19","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr#L19","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"each(&block)-instance-method","html_id":"each(&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr#L39","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr#L39","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@index.each do |_, rate|\n  yield rate\nend"}},{"id":"transaction(&block:->_)-instance-method","html_id":"transaction(&amp;block:-&gt;_)-instance-method","name":"transaction","doc":"Wraps block execution in a thread-safe transaction.\nNOTE: Uses `Mutex` to synchronize data access.","summary":"<p>Wraps block execution in a thread-safe transaction.</p>","abstract":false,"args":[],"args_string":"(&block :  -> _)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr#L27","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/currency/rate_store/memory.cr#L27","def":{"name":"transaction","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> _)"},"return_type":"","visibility":"Public","body":"@mutex.synchronize do\n  yield\nend"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/crystal-money/money/Money/DifferentCurrencyError","path":"Money/DifferentCurrencyError.html","kind":"class","full_name":"Money::DifferentCurrencyError","name":"DifferentCurrencyError","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/error.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/error.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":"Raised when trying to exchange currencies.","summary":"<p>Raised when trying to exchange currencies.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Error","path":"Money/Error.html","kind":"class","full_name":"Money::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/error.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/error.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crystal-money/money/Money/DifferentCurrencyError","kind":"class","full_name":"Money::DifferentCurrencyError","name":"DifferentCurrencyError"},{"html_id":"github.com/crystal-money/money/Money/Parse/Error","kind":"class","full_name":"Money::Parse::Error","name":"Error"},{"html_id":"github.com/crystal-money/money/Money/UndefinedSmallestDenominationError","kind":"class","full_name":"Money::UndefinedSmallestDenominationError","name":"UndefinedSmallestDenominationError"},{"html_id":"github.com/crystal-money/money/Money/UnknownCurrencyError","kind":"class","full_name":"Money::UnknownCurrencyError","name":"UnknownCurrencyError"},{"html_id":"github.com/crystal-money/money/Money/UnknownRateError","kind":"class","full_name":"Money::UnknownRateError","name":"UnknownRateError"}],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Exchange","path":"Money/Exchange.html","kind":"module","full_name":"Money::Exchange","name":"Exchange","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/exchange.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/exchange.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"}],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"exchange_to(other_currency):Money-instance-method","html_id":"exchange_to(other_currency):Money-instance-method","name":"exchange_to","doc":"Exchanges `self` to a new `Money` object in *other_currency*.","summary":"<p>Exchanges <code>self</code> to a new <code><a href=\"../Money.html\">Money</a></code> object in <em>other_currency</em>.</p>","abstract":false,"args":[{"name":"other_currency","doc":null,"default_value":"","external_name":"other_currency","restriction":""}],"args_string":"(other_currency) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/exchange.cr#L4","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/exchange.cr#L4","def":{"name":"exchange_to","args":[{"name":"other_currency","doc":null,"default_value":"","external_name":"other_currency","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"other_currency = Currency.wrap(other_currency)\nif currency == other_currency\n  self\nelse\n  bank.exchange(self, other_currency)\nend\n"}},{"id":"with_same_currency(other:Money,&block)-instance-method","html_id":"with_same_currency(other:Money,&amp;block)-instance-method","name":"with_same_currency","doc":"Yields *other* `Money` object exchanged to `self.currency`.","summary":"<p>Yields <em>other</em> <code><a href=\"../Money.html\">Money</a></code> object exchanged to <code>self.currency</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"args_string":"(other : Money, &block)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/exchange.cr#L14","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/exchange.cr#L14","def":{"name":"with_same_currency","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Money"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield other.exchange_to(currency)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Formatting","path":"Money/Formatting.html","kind":"module","full_name":"Money::Formatting","name":"Formatting","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/formatting.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"}],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"format(options:NamedTuple):String-instance-method","html_id":"format(options:NamedTuple):String-instance-method","name":"format","doc":"Creates a formatted price string according to several rules.\n\n**display_free** (`Bool | String`) — default: `false`\n\nWhether a zero amount of money should be formatted as the supplied string.\n\n```\nMoney.us_dollar(0).format(display_free: \"gratis\") # => \"gratis\"\nMoney.us_dollar(0).format                         # => \"$0.00\"\n```\n\n**sign_positive** (`Bool`) — default: `false`\n\nWhether positive numbers should be signed, too.\n\n```\n# You can specify to display the sign with positive numbers\nMoney.new(100, \"GBP\").format(sign_positive: true) # => \"+£1.00\"\nMoney.new(100, \"GBP\").format                      # => \"£1.00\"\n```\n\n**with_currency** (`Bool`) — default: `false`\n\nWhether the currency name should be appended to the result string.\n\n```\nMoney.us_dollar(100).format                      # => \"$1.00\"\nMoney.us_dollar(100).format(with_currency: true) # => \"$1.00 USD\"\nMoney.us_dollar(85).format(with_currency: true)  # => \"$0.85 USD\"\n```\n\n**no_cents** (`Bool`) — default: `false`\n\nWhether cents should be omitted.\n\n```\nMoney.us_dollar(100).format(no_cents: true) # => \"$1\"\nMoney.us_dollar(599).format(no_cents: true) # => \"$5\"\n```\n\n**no_cents_if_whole** (`Bool`) — default: `false`\n\nWhether cents should be omitted if the cent value is zero.\n\n```\nMoney.us_dollar(10000).format(no_cents_if_whole: true) # => \"$100\"\nMoney.us_dollar(10034).format(no_cents_if_whole: true) # => \"$100.34\"\n```\n\n**drop_trailing_zeros** (`Bool`) — default: `false`\n\n```\nMoney.new(89000, :btc).format(drop_trailing_zeros: true) # => ฿0.00089\nMoney.new(110, :usd).format(drop_trailing_zeros: true)   # => $1.1\n```\n\n**symbol_first** (`Bool`) — default: `false`\n\nWhether a money symbol should go before the amount.\n\n```\nMoney.new(10000, \"USD\").format(symbol_first: true)  # => \"$100.00\"\nMoney.new(10000, \"USD\").format(symbol_first: false) # => \"100.00 $\"\n```\n\n**symbol** (`Bool | String | Nil`) — default: `true`\n\nWhether a money symbol should be prepended to the result string.\nThis method attempts to pick a symbol that's suitable for the given currency.\n\n```\nMoney.new(100, \"USD\") # => \"$1.00\"\nMoney.new(100, \"GBP\") # => \"£1.00\"\nMoney.new(100, \"EUR\") # => \"€1.00\"\n\n# Same thing.\nMoney.new(100, \"USD\").format(symbol: true) # => \"$1.00\"\nMoney.new(100, \"GBP\").format(symbol: true) # => \"£1.00\"\nMoney.new(100, \"EUR\").format(symbol: true) # => \"€1.00\"\n\n# You can pass `false` or an empty string to disable\n# prepending a money symbol.\nMoney.new(100, \"USD\").format(symbol: false) # => \"1.00\"\nMoney.new(100, \"GBP\").format(symbol: nil)   # => \"1.00\"\nMoney.new(100, \"EUR\").format(symbol: \"\")    # => \"1.00\"\n\n# If the symbol for the given currency isn't known, then it will default\n# to \"¤\" as symbol.\nMoney.new(100, \"XBC\").format(symbol: true) # => \"1.00 ¤\"\n\n# You can specify a string as value to enforce using a particular symbol.\nMoney.new(100, \"XBC\").format(symbol: \"ƒ\") # => \"1.00 ƒ\"\n```\n\n**symbol_before_without_space** (`Bool | Nil`) - default: `true`\n\nWhether a space between the money symbol and the amount should be inserted\nwhen `:symbol_first` is `true`. The default is `true` (meaning no space).\nIgnored if `:symbol` is `false` or `:symbol_first` is `false`.\n\n```\n# Default is to not insert a space.\nMoney.new(100, \"USD\").format # => \"$1.00\"\n\n# Same thing.\nMoney.new(100, \"USD\").format(symbol_before_without_space: true) # => \"$1.00\"\n\n# If set to false, will insert a space.\nMoney.new(100, \"USD\").format(symbol_before_without_space: false) # => \"$ 1.00\"\n```\n\n**symbol_after_without_space** (`Bool | Nil`) - default: `false`\n\nWhether a space between the amount and the money symbol should be inserted\nwhen `:symbol_first` is `false`. The default is `false` (meaning space).\nIgnored if `:symbol` is `false` or `:symbol_first` is `true`.\n\n```\n# Default is to insert a space.\nMoney.new(100, \"USD\").format(symbol_first: false) # => \"1.00 $\"\n\n# If set to true, will not insert a space.\nMoney.new(100, \"USD\").format(symbol_first: false, symbol_after_without_space: true) # => \"1.00$\"\n```\n\n**separator** (`Bool | String | Nil`) — default: `true`\n\nWhether the currency should be separated by the specified character or \".\".\n\n```\n# If a string is specified, it's value is used.\nMoney.new(100, \"USD\").format(separator: \",\") # => \"$1,00\"\n\n# If the separator for a given currency isn't known, then it will default\n# to \".\" as separator.\nMoney.new(100, \"FOO\").format # => \"$1.00\"\n```\n\n**delimiter** (`Bool | String | Nil`) — default: `true`\n\nWhether the currency should be delimited by the specified character or \",\".\n\n```\n# If false is specified, no delimiter is used.\nMoney.new(100000, \"USD\").format(delimiter: false) # => \"1000.00\"\nMoney.new(100000, \"USD\").format(delimiter: nil)   # => \"1000.00\"\nMoney.new(100000, \"USD\").format(delimiter: \"\")    # => \"1000.00\"\n\n# If a string is specified, it's value is used.\nMoney.new(100000, \"USD\").format(delimiter: \".\") # => \"$1.000.00\"\n\n# If the delimiter for a given currency isn't known, then it will\n# default to \",\" as delimiter.\nMoney.new(100000, \"FOO\").format # => \"$1,000.00\"\n```\n\n**html** (`Bool | Nil`) — default: `false`\n\nWhether the currency should be HTML-formatted.\n\n```\nMoney.new(1999, \"RUB\").format(html: true, no_cents: true) # => \"19 &#x20BD;\"\n```","summary":"<p>Creates a formatted price string according to several rules.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"NamedTuple"}],"args_string":"(options : NamedTuple) : String","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr#L168","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr#L168","def":{"name":"format","args":[{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"default_options = {display_free: false, sign_positive: false, with_currency: false, html: false, no_cents: false, no_cents_if_whole: false, drop_trailing_zeros: false, symbol_before_without_space: true, symbol_after_without_space: false, symbol_first: currency.symbol_first? || false, symbol: currency.symbol || \"¤\", separator: currency.decimal_mark || \".\", delimiter: currency.thousands_separator || \",\"}\noptions = default_options.merge(options)\n{% for key in [:symbol, :separator, :delimiter] of ::Symbol %}\n        if options[{{ key }}] === true\n          options = options.merge {{ key.id }}: default_options[{{ key }}]\n        end\n      {% end %}\nif zero?\n  display_free = options[:display_free]\n  if display_free.is_a?(String)\n    return display_free\n  end\nend\nunit, subunit = fractional.abs.divmod(currency.subunit_to_unit)\nformatted = unit.to_s\ndelimiter = options[:delimiter]\nif delimiter\n  formatted = formatted.gsub(DELIMITER_REGEX) do |digit_to_delimit|\n    \"#{digit_to_delimit}#{delimiter}\"\n  end\nend\ndisplay_cents = true\nif options[:no_cents] || (options[:no_cents_if_whole] && subunit.zero?)\n  display_cents = false\nend\ndecimal_places = currency.decimal_places\nif display_cents && decimal_places > 0\n  subunit = subunit.to_s.rjust(decimal_places, '0')\n  if options[:drop_trailing_zeros]\n    subunit = subunit.sub(/0+$/, \"\")\n  end\n  if subunit.empty?\n  else\n    formatted = formatted + \"#{options[:separator]}#{subunit}\"\n  end\nend\nsign = negative? ? '-' : (options[:sign_positive] && positive?) ? '+' : nil\nsymbol = options[:symbol]\nif options[:html]\n  if html_entity = currency.html_entity\n    symbol = html_entity\n  end\nend\nif (symbol.is_a?(String)) && (!symbol.empty?)\n  if options[:symbol_first]\n    symbol_space = options[:symbol_before_without_space] ? nil : ' '\n    formatted = \"#{sign}#{symbol}#{symbol_space}#{formatted}\"\n  else\n    symbol_space = options[:symbol_after_without_space] ? nil : ' '\n    formatted = \"#{sign}#{formatted}#{symbol_space}#{symbol}\"\n  end\nelse\n  formatted = \"#{sign}#{formatted}\"\nend\nif options[:with_currency]\n  formatted = formatted + \" #{currency}\"\nend\nformatted\n"}},{"id":"format:String-instance-method","html_id":"format:String-instance-method","name":"format","doc":"Creates a formatted price string according to several rules.\n\n**display_free** (`Bool | String`) — default: `false`\n\nWhether a zero amount of money should be formatted as the supplied string.\n\n```\nMoney.us_dollar(0).format(display_free: \"gratis\") # => \"gratis\"\nMoney.us_dollar(0).format                         # => \"$0.00\"\n```\n\n**sign_positive** (`Bool`) — default: `false`\n\nWhether positive numbers should be signed, too.\n\n```\n# You can specify to display the sign with positive numbers\nMoney.new(100, \"GBP\").format(sign_positive: true) # => \"+£1.00\"\nMoney.new(100, \"GBP\").format                      # => \"£1.00\"\n```\n\n**with_currency** (`Bool`) — default: `false`\n\nWhether the currency name should be appended to the result string.\n\n```\nMoney.us_dollar(100).format                      # => \"$1.00\"\nMoney.us_dollar(100).format(with_currency: true) # => \"$1.00 USD\"\nMoney.us_dollar(85).format(with_currency: true)  # => \"$0.85 USD\"\n```\n\n**no_cents** (`Bool`) — default: `false`\n\nWhether cents should be omitted.\n\n```\nMoney.us_dollar(100).format(no_cents: true) # => \"$1\"\nMoney.us_dollar(599).format(no_cents: true) # => \"$5\"\n```\n\n**no_cents_if_whole** (`Bool`) — default: `false`\n\nWhether cents should be omitted if the cent value is zero.\n\n```\nMoney.us_dollar(10000).format(no_cents_if_whole: true) # => \"$100\"\nMoney.us_dollar(10034).format(no_cents_if_whole: true) # => \"$100.34\"\n```\n\n**drop_trailing_zeros** (`Bool`) — default: `false`\n\n```\nMoney.new(89000, :btc).format(drop_trailing_zeros: true) # => ฿0.00089\nMoney.new(110, :usd).format(drop_trailing_zeros: true)   # => $1.1\n```\n\n**symbol_first** (`Bool`) — default: `false`\n\nWhether a money symbol should go before the amount.\n\n```\nMoney.new(10000, \"USD\").format(symbol_first: true)  # => \"$100.00\"\nMoney.new(10000, \"USD\").format(symbol_first: false) # => \"100.00 $\"\n```\n\n**symbol** (`Bool | String | Nil`) — default: `true`\n\nWhether a money symbol should be prepended to the result string.\nThis method attempts to pick a symbol that's suitable for the given currency.\n\n```\nMoney.new(100, \"USD\") # => \"$1.00\"\nMoney.new(100, \"GBP\") # => \"£1.00\"\nMoney.new(100, \"EUR\") # => \"€1.00\"\n\n# Same thing.\nMoney.new(100, \"USD\").format(symbol: true) # => \"$1.00\"\nMoney.new(100, \"GBP\").format(symbol: true) # => \"£1.00\"\nMoney.new(100, \"EUR\").format(symbol: true) # => \"€1.00\"\n\n# You can pass `false` or an empty string to disable\n# prepending a money symbol.\nMoney.new(100, \"USD\").format(symbol: false) # => \"1.00\"\nMoney.new(100, \"GBP\").format(symbol: nil)   # => \"1.00\"\nMoney.new(100, \"EUR\").format(symbol: \"\")    # => \"1.00\"\n\n# If the symbol for the given currency isn't known, then it will default\n# to \"¤\" as symbol.\nMoney.new(100, \"XBC\").format(symbol: true) # => \"1.00 ¤\"\n\n# You can specify a string as value to enforce using a particular symbol.\nMoney.new(100, \"XBC\").format(symbol: \"ƒ\") # => \"1.00 ƒ\"\n```\n\n**symbol_before_without_space** (`Bool | Nil`) - default: `true`\n\nWhether a space between the money symbol and the amount should be inserted\nwhen `:symbol_first` is `true`. The default is `true` (meaning no space).\nIgnored if `:symbol` is `false` or `:symbol_first` is `false`.\n\n```\n# Default is to not insert a space.\nMoney.new(100, \"USD\").format # => \"$1.00\"\n\n# Same thing.\nMoney.new(100, \"USD\").format(symbol_before_without_space: true) # => \"$1.00\"\n\n# If set to false, will insert a space.\nMoney.new(100, \"USD\").format(symbol_before_without_space: false) # => \"$ 1.00\"\n```\n\n**symbol_after_without_space** (`Bool | Nil`) - default: `false`\n\nWhether a space between the amount and the money symbol should be inserted\nwhen `:symbol_first` is `false`. The default is `false` (meaning space).\nIgnored if `:symbol` is `false` or `:symbol_first` is `true`.\n\n```\n# Default is to insert a space.\nMoney.new(100, \"USD\").format(symbol_first: false) # => \"1.00 $\"\n\n# If set to true, will not insert a space.\nMoney.new(100, \"USD\").format(symbol_first: false, symbol_after_without_space: true) # => \"1.00$\"\n```\n\n**separator** (`Bool | String | Nil`) — default: `true`\n\nWhether the currency should be separated by the specified character or \".\".\n\n```\n# If a string is specified, it's value is used.\nMoney.new(100, \"USD\").format(separator: \",\") # => \"$1,00\"\n\n# If the separator for a given currency isn't known, then it will default\n# to \".\" as separator.\nMoney.new(100, \"FOO\").format # => \"$1.00\"\n```\n\n**delimiter** (`Bool | String | Nil`) — default: `true`\n\nWhether the currency should be delimited by the specified character or \",\".\n\n```\n# If false is specified, no delimiter is used.\nMoney.new(100000, \"USD\").format(delimiter: false) # => \"1000.00\"\nMoney.new(100000, \"USD\").format(delimiter: nil)   # => \"1000.00\"\nMoney.new(100000, \"USD\").format(delimiter: \"\")    # => \"1000.00\"\n\n# If a string is specified, it's value is used.\nMoney.new(100000, \"USD\").format(delimiter: \".\") # => \"$1.000.00\"\n\n# If the delimiter for a given currency isn't known, then it will\n# default to \",\" as delimiter.\nMoney.new(100000, \"FOO\").format # => \"$1,000.00\"\n```\n\n**html** (`Bool | Nil`) — default: `false`\n\nWhether the currency should be HTML-formatted.\n\n```\nMoney.new(1999, \"RUB\").format(html: true, no_cents: true) # => \"19 &#x20BD;\"\n```","summary":"<p>Creates a formatted price string according to several rules.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr#L249","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr#L249","def":{"name":"format","args":[],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"format(options)"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":"See `#format`.","summary":"<p>See <code><a href=\"../Money/Formatting.html#format%3AString-instance-method\">#format</a></code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr#L254","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/formatting.cr#L254","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << format"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/Parse","path":"Money/Parse.html","kind":"module","full_name":"Money::Parse","name":"Parse","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"money/money/parse.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"PATTERNS","value":"{/(?<sign>\\+|\\-)?(?<amount>\\d+(?:[.,]\\d+)?)\\s*(?<symbol>[^0-9,.]+)/, /(?<sign>\\+|\\-)?(?<symbol>[^0-9,.]+)\\s*(?<amount>\\d+(?:[.,]\\d+)?)/}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"parse(str:String,allow_ambigous=true):Money-instance-method","html_id":"parse(str:String,allow_ambigous=true):Money-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"allow_ambigous","doc":null,"default_value":"true","external_name":"allow_ambigous","restriction":""}],"args_string":"(str : String, allow_ambigous = <span class=\"n\">true</span>) : Money","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr#L13","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr#L13","def":{"name":"parse","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"allow_ambigous","doc":null,"default_value":"true","external_name":"allow_ambigous","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money","visibility":"Public","body":"parse(str, allow_ambigous) do |ex|\n  raise(ex)\nend"}},{"id":"parse?(str:String,allow_ambigous=true):Money?-instance-method","html_id":"parse?(str:String,allow_ambigous=true):Money?-instance-method","name":"parse?","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"allow_ambigous","doc":null,"default_value":"true","external_name":"allow_ambigous","restriction":""}],"args_string":"(str : String, allow_ambigous = <span class=\"n\">true</span>) : Money?","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr#L17","source_link":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr#L17","def":{"name":"parse?","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"allow_ambigous","doc":null,"default_value":"true","external_name":"allow_ambigous","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Money | ::Nil","visibility":"Public","body":"parse(str, allow_ambigous) do\n  nil\nend"}}],"macros":[],"types":[{"html_id":"github.com/crystal-money/money/Money/Parse/Error","path":"Money/Parse/Error.html","kind":"class","full_name":"Money::Parse::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/money/parse.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/money/parse.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money/Parse","kind":"module","full_name":"Money::Parse","name":"Parse"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/crystal-money/money/Money/UndefinedSmallestDenominationError","path":"Money/UndefinedSmallestDenominationError.html","kind":"class","full_name":"Money::UndefinedSmallestDenominationError","name":"UndefinedSmallestDenominationError","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/error.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/error.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":"Raised when smallest denomination of a currency is not defined.","summary":"<p>Raised when smallest denomination of a currency is not defined.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/UnknownCurrencyError","path":"Money/UnknownCurrencyError.html","kind":"class","full_name":"Money::UnknownCurrencyError","name":"UnknownCurrencyError","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/error.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/error.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-money/money/Money/UnknownRateError","path":"Money/UnknownRateError.html","kind":"class","full_name":"Money::UnknownRateError","name":"UnknownRateError","abstract":false,"superclass":{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"github.com/crystal-money/money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"github.com/crystal-money/money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-money/money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-money/money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"money/error.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/9acbad0114422f4c13b61540a826e90ccd807ace/src/money/error.cr"}],"repository_name":"github.com/crystal-money/money","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-money/money/Money","kind":"class","full_name":"Money","name":"Money"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}